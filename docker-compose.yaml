version: '3.5'
name: gemfire-cluster
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    expose:
      - 9090
    networks: [gemfire-cluster-networks]
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    expose:
      - 3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret123
    networks: [gemfire-cluster-networks]
  gemfire-locator-0:
    image: gemfire/gemfire-all:10.1-jdk17
    command: > 
      gfsh start locator 
        --name=locator-0
        --port=10334
        --J=-Xmx1G
        --J=-Xms1G
        --J=-Dgemfire.distributed-system-id=42
        --J=-Dgemfire.enable-metrics=true
        --J=-Dgemfire.metrics-publication-enabled=true
        --J=-Dgemfire.http-service-port=7070
        --J=-Dgemfire.jmx-manager-port=1099
        --J=-Dgemfire.http-service-port=7070
        --J=-Dgemfire.prometheus.metrics.emission=All
        --J=-Dgemfire.prometheus.metrics.interval=2m
        --J=-Dgemfire.prometheus.metrics.host=127.0.0.1
        --J=-Dgemfire.prometheus.metrics.host=0.0.0.0
        --J=-Dgemfire.prometheus.metrics.port=9050
        --J=-Dgemfire.enable-system-statistics=true
        --J=-Dgemfire.enable-time-statistics=true
        --J=-Dgemfire.metrics.logback.enabled=true
        --J=-Dgemfire.metrics.jvm.enabled=true
        --redirect-output
        --log-level=config
    environment:
      - ACCEPT_TERMS=y
    ports:
      - "10334:10334"
      - "7070:7070"
      - "1099:1099"
      - "9050:9050"
    expose:
      - 10334
      - 7070
      - 1099
      - 9050
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7070/management/v1/members/locator-0"]
      interval: 30s
      start_interval: 5s
      start_period: 20s
      retries: 5
    networks: [gemfire-cluster-networks]
    volumes:
      - ./gemfire/locator.gf:/etc/locator.gf:ro
  gemfire-server-0:
    image: gemfire/gemfire-all:10.1-jdk17
    depends_on:
      gemfire-locator-0:
        condition: service_healthy
    command: >
      gfsh start server 
        --name=server-0
        --server-port=40405
        --start-rest-api
        --J=-Xmx1G
        --J=-Xms1G
        --J=-Dgemfire.distributed-system-id=42
        --J=-Dgemfire.enable-metrics=true
        --J=-Dgemfire.metrics-publication-enabled=true
        --J=-Dgemfire.http-service-port=7070
        --J=-Dgemfire.jmx-manager-port=1099
        --J=-Dgemfire.http-service-port=7070
        --J=-Dgemfire.prometheus.metrics.emission=All
        --J=-Dgemfire.prometheus.metrics.interval=2m
        --J=-Dgemfire.prometheus.metrics.host=0.0.0.0
        --J=-Dgemfire.prometheus.metrics.port=9051
        --J=-Dgemfire.enable-system-statistics=true
        --J=-Dgemfire.metrics.logback.enabled=true
        --J=-Dgemfire.metrics.jvm.enabled=true
        --J=-Dgemfire.statistic.enable-statistics=true
        --J=-Dgemfire.statistic.archive-file=stats.gfs
        --J=-Dgemfire.statistic.sample-rate=1000
        --J=-Dgemfire.enable-time-statistics=true
        --J=-Dgemfire.statistic-sampling-enabled=true
        --J=-Dmicrometer.metrics.logback.enabled=true
        --locators=gemfire-locator-0[10334]
        --redirect-output
        --log-level=config
    environment:
      - ACCEPT_TERMS=y
    ports:
      - "7071:7070"
      - "40405:40405"
      - "9051:9051"
    expose:
      - 9051
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7070/gemfire-api/v1/ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    links:
      - gemfire-locator-0
    networks: [gemfire-cluster-networks]
  management-console:
    image: gemfire/gemfire-management-console:latest
    ports:
      - "7072:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      start_interval: 5s
      start_period: 20s
      retries: 5
    depends_on:
      gemfire-locator-0:
        condition: service_healthy
    links:
      - gemfire-locator-0
    networks: [gemfire-cluster-networks]
  bootstrap-grafana:
    profiles: ["manual"]
    networks:
      - gemfire-cluster-networks
    image: python:3.9-slim
    command: >
      sh -c "
        pip install -r /app/requirements.txt &&
        python /app/generate_grafana_service_key.py | tee /tmp/api_key &&
        API_KEY=$$(cat /tmp/api_key | grep 'API key:' | cut -f3 -d ' ') &&
        echo $$API_KEY &&
        python /app/add_prometheus_to_grafana.py $$API_KEY &&
        python /app/add_dashboard_to_grafana.py $$API_KEY /app/dashboards/dashboard.json
      "
    volumes:
      - ./grafana/dashboards/dashboard.json:/app/dashboards/dashboard.json
      - ./python:/app
    working_dir: /app
networks:
  gemfire-cluster-networks:
    driver: bridge

